{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "required": [
    "$schema",
    "name",
    "namespace",
    "version",
    "authors",
    "configuration",
    "inputs",
    "outputs"
  ],
  "type": "object",
  "properties": {
    "$schema": {},
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 30,
      "pattern": "^[a-zA-Z0-9_\\s\\-]+$"
    },
    "version": {
      "$ref": "#/$defs/types/semver"
    },
    "namespace": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_]*(\\.[a-zA-Z0-9_-]+)+$"
    },
    "description": {
      "type": "string",
      "default": "",
      "maxLength": 2048
    },
    "authors": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/$defs/contact"
      }
    },
    "external": {
      "type": "object",
      "properties": {
        "source_code": {
          "type": "string",
          "format": "uri"
        },
        "doi": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "input_folder": {
          "$ref": "#/$defs/types/path",
          "default": "/inputs"
        },
        "output_folder": {
          "$ref": "#/$defs/types/path",
          "default": "/outputs"
        },
        "resources": {
          "type": "object",
          "properties": {
            "ram": {
              "$ref": "#/$defs/types/memory",
              "default": "1GiB"
            },
            "vram": {
              "$ref": "#/$defs/types/memory",
              "default": "8GiB"
            },
            "gpu": {
              "type": "integer",
              "default": 0
            },
            "cores": {
              "type": "integer",
              "default": 1
            },
            "threads": {
              "type": "integer",
              "default": 1
            },
            "internet": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "inputs": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "$ref": "#/$defs/io/input_parameter"
        }
      },
      "additionalProperties": false
    },
    "outputs": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9_]+$": {
          "$ref": "#/$defs/io/output_parameter"
        }
      },
      "additionalProperties": false
    }
  },
  "$defs": {
    "dependencies": {
      "derived_from": {
        "type": "string",
        "pattern": "^inputs/[a-zA-Z0-9_]+$"

      },
      "matching": {
        "type": "array",
        "min_size": 1,
        "items": {
          "type": "string",
          "pattern": "^(inputs|outputs)/[a-zA-Z0-9_]+$"
        }
      }
    },
    "types": {
      "semver": {
        "type": "string",
        "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
      },
      "path": {
        "type": "string",
        "pattern": "^\/.*$"
      },
      "memory": {
        "type": "string",
        "pattern": "^(?:0|[1-9]\\d*)(?:\\.\\d+)?\\s*(?:(?:[KMGTPEZY]i?)?B|(?:[kmgtpezy]i?)?b)?$"
      },
      "enum_item": {
        "type": "string",
        "minLength": 1,
        "maxLength": 256,
        "pattern": "^[^\\r\\n]+$"
      }
    },
    "contact": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "is_contact": {
          "type": "boolean"
        }
      },
      "required": ["first_name" , "last_name" , "organization" , "email" , "is_contact"]
    },
    "io": {
      "parameter": {
        "description": {
          "type": "string"
        },
        "optional": {
          "type": "boolean",
          "default": false
        }
      },
      "base_parameter": {
        "type": "object",
        "required": ["description"],
        "properties": {
          "display_name": {
            "type": "string",
            "minLength": 1
          },
          "description": {"$ref": "#/$defs/io/parameter/description"}
        }
      },
      "type_specs": {
        "integer": {
          "oneOf": [
            {
              "const": "integer"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "integer"},
                "$comment": "TODO add validation rules for range validators",
                "gt": {"type": "integer"},
                "lt": {"type": "integer"},
                "geq": {"type": "integer"},
                "leq": {"type": "integer"}
              }
            }
          ]
        },
        "boolean": {
          "oneOf": [
            {
              "const": "boolean"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "boolean"}
              }
            }
          ]
        },
        "number": {
          "oneOf": [
            {
              "const": "number"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "number"},
                "gt": {"type": "number"},
                "lt": {"type": "number"},
                "geq": {"type": "number"},
                "leq": {"type": "number"},
                "infinity_allowed": {"type": "boolean", "default": false},
                "nan_allowed": {"type": "boolean", "default": false}
              }
            }
          ]
        },
        "string": {
          "oneOf": [
            {
              "const": "string"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "string"},
                "min-length": {"type": "string", "default": 0},
                "max-length": {"type": "string"}
              }
            }
          ]
        },
        "enumeration": {
          "type": "object",
          "required": ["id", "values"],
          "properties": {
            "id": {"const": "enumeration"},
            "values": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/$defs/types/enum_item"
              }
            }
          }
        },
        "datetime": {
          "oneOf": [
            {
              "const": "datetime"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "datetime"},
                "before": {
                  "type": "string",
                  "format": "date-time"
                },
                "after": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          ]
        },
        "geometry": {
          "const": "geometry"
        },
        "image": {
          "oneOf": [
            {
              "const": "image"
            },
            {
              "type": "object",
              "required": ["id"],
              "properties": {
                "id": {"const": "image"},
                "max_file_size": {
                  "$ref": "#/$defs/types/memory"
                },
                "formats": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "enum": ["png", "jpeg", "tiff"]
                  }
                },
                "max_width": {
                  "type": "integer"
                },
                "max_height": {
                  "type": "integer"
                }
              }
            }
          ]
        },
        "array": {
          "type": "object",
          "required": ["id", "subtype"],
          "properties": {
            "id": {"const": "array"},
            "min_size": {
              "type": "integer"
            },
            "max_size": {
              "type": "integer"
            },
            "allow_missing": {
              "type": "boolean"
            },
            "subtype": {
              "oneOf": [
                {"$ref": "#/$defs/io/type_specs/integer"},
                {"$ref": "#/$defs/io/type_specs/boolean"},
                {"$ref": "#/$defs/io/type_specs/number"},
                {"$ref": "#/$defs/io/type_specs/string"},
                {"$ref": "#/$defs/io/type_specs/enumeration"},
                {"$ref": "#/$defs/io/type_specs/datetime"},
                {"$ref": "#/$defs/io/type_specs/geometry"},
                {"$ref": "#/$defs/io/type_specs/image"},
                {"$ref": "#/$defs/io/type_specs/array"}
              ]
            }
          }
        }
      },
      "typed_parameter": {
        "integer": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/integer"}
          },
          "unevaluatedProperties": true
        },
        "boolean": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/boolean"}
          },
          "unevaluatedProperties": true
        },
        "number": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/number"}
          },
          "unevaluatedProperties": true
        },
        "string": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/string"}
          },
          "unevaluatedProperties": true
        },
        "enumeration": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/enumeration"}
          },
          "unevaluatedProperties": true
        },
        "datetime": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/datetime"}
          },
          "unevaluatedProperties": true
        },
        "geometry": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/geometry"}
          },
          "unevaluatedProperties": true
        },
        "image": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"}
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/image"}
          },
          "unevaluatedProperties": true
        },
        "array": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/io/base_parameter"},
            {
              "type": "object",
              "properties": {
                "dependencies": {
                  "type": "object",
                  "properties": {
                    "$ref": "#/$defs/dependencies/matching"
                  }
                }
              }
            }
          ],
          "required": ["type"],
          "properties": {
            "type": {"$ref": "#/$defs/io/type_specs/array"}
          },
          "unevaluatedProperties": true
        }
      },
      "input_parameter": {
        "$comment": "input definition is more verbose than output's because we increase with 'default' and 'optional' fields which are not available for outputs",
        "allOf": [
          {
            "oneOf": [
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/integer"},
                  { "type": "object", "properties": { "default": {"type": "integer"}} }
                ]
              },
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/boolean"},
                  { "type": "object", "properties": { "default": {"type": "boolean"}} }
                ]
              },
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/number"},
                  { "type": "object", "properties": { "default": {"type": "number"}} }
                ]
              },
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/string"},
                  { "type": "object", "properties": { "default": {"type": "string"}} }
                ]
              },
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/enumeration"},
                  { "type": "object", "properties": { "default": {"$ref": "#/$defs/types/enum_item"}} }
                ]
              },
              {
                "allOf": [
                  {"$ref": "#/$defs/io/typed_parameter/datetime"},
                  { "type": "object", "properties": {"default": { "type": "string", "format": "date-time"}} }
                ]
              },
              {
                "$ref": "#/$defs/io/typed_parameter/geometry"
              },
              {
                "$ref": "#/$defs/io/typed_parameter/image"
              },
              {
                "$ref": "#/$defs/io/typed_parameter/array"
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "optional": {"$ref": "#/$defs/io/parameter/optional"}
            },
            "unevaluatedProperties": true
          }
        ]
      },
      "output_parameter": {
        "allOf": [
          {
            "oneOf": [
              {"$ref": "#/$defs/io/typed_parameter/integer"},
              {"$ref": "#/$defs/io/typed_parameter/boolean"},
              {"$ref": "#/$defs/io/typed_parameter/number"},
              {"$ref": "#/$defs/io/typed_parameter/string"},
              {"$ref": "#/$defs/io/typed_parameter/enumeration"},
              {"$ref": "#/$defs/io/typed_parameter/datetime"},
              {"$ref": "#/$defs/io/typed_parameter/geometry"},
              {"$ref": "#/$defs/io/typed_parameter/image"},
              {"$ref": "#/$defs/io/typed_parameter/array"}
            ]
          },
          {
            "type": "object",
            "properties": {
              "dependencies": {
                "type": "object",
                "properties": {
                  "$ref": "#/$defs/dependencies/derived_from"
                },
                "unevaluatedProperties": true
              }
            }
          }
        ]
      }
    }
  }
}
